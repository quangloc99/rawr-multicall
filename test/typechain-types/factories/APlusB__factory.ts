/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { APlusB, APlusBInterface } from "../APlusB";

const _abi = [
  {
    inputs: [
      {
        internalType: "int256",
        name: "a",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "b",
        type: "int256",
      },
    ],
    name: "minus",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "a",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "b",
        type: "int256",
      },
    ],
    name: "plus",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610258806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631858c77d1461003b578063ccf655031461006b575b600080fd5b61005560048036038101906100509190610102565b61009b565b6040516100629190610151565b60405180910390f35b61008560048036038101906100809190610102565b6100b1565b6040516100929190610151565b60405180910390f35b600081836100a9919061019b565b905092915050565b600081836100bf91906101de565b905092915050565b600080fd5b6000819050919050565b6100df816100cc565b81146100ea57600080fd5b50565b6000813590506100fc816100d6565b92915050565b60008060408385031215610119576101186100c7565b5b6000610127858286016100ed565b9250506020610138858286016100ed565b9150509250929050565b61014b816100cc565b82525050565b60006020820190506101666000830184610142565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006101a6826100cc565b91506101b1836100cc565b92508282039050818112600084121682821360008512151617156101d8576101d761016c565b5b92915050565b60006101e9826100cc565b91506101f4836100cc565b92508282019050828112156000831216838212600084121516171561021c5761021b61016c565b5b9291505056fea264697066735822122072db557d82347136f7d8e54d35020304656bac92107cfabda603b342fe5d228964736f6c63430008110033";

type APlusBConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: APlusBConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class APlusB__factory extends ContractFactory {
  constructor(...args: APlusBConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      APlusB & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): APlusB__factory {
    return super.connect(runner) as APlusB__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): APlusBInterface {
    return new Interface(_abi) as APlusBInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): APlusB {
    return new Contract(address, _abi, runner) as unknown as APlusB;
  }
}
