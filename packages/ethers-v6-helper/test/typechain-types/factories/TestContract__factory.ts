/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { TestContract, TestContractInterface } from "../TestContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "int256",
        name: "a",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "b",
        type: "int256",
      },
    ],
    name: "compare",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
    ],
    name: "hash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "x",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "y",
            type: "int256",
          },
        ],
        internalType: "struct TestContract.Vec2",
        name: "v",
        type: "tuple",
      },
    ],
    name: "swapXY",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "x",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "y",
            type: "int256",
          },
        ],
        internalType: "struct TestContract.Vec2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526040518060400160405280600e81526020017f5465737420546573742054657374000000000000000000000000000000000000815250600090816200004a9190620002d9565b503480156200005857600080fd5b50620003c0565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620000e157607f821691505b602082108103620000f757620000f662000099565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001617fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000122565b6200016d868362000122565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620001ba620001b4620001ae8462000185565b6200018f565b62000185565b9050919050565b6000819050919050565b620001d68362000199565b620001ee620001e582620001c1565b8484546200012f565b825550505050565b600090565b62000205620001f6565b62000212818484620001cb565b505050565b5b818110156200023a576200022e600082620001fb565b60018101905062000218565b5050565b601f82111562000289576200025381620000fd565b6200025e8462000112565b810160208510156200026e578190505b620002866200027d8562000112565b83018262000217565b50505b505050565b600082821c905092915050565b6000620002ae600019846008026200028e565b1980831691505092915050565b6000620002c983836200029b565b9150826002028217905092915050565b620002e4826200005f565b67ffffffffffffffff8111156200030057620002ff6200006a565b5b6200030c8254620000c8565b620003198282856200023e565b600060209050601f8311600181146200035157600084156200033c578287015190505b620003488582620002bb565b865550620003b8565b601f1984166200036186620000fd565b60005b828110156200038b5784890151825560018201915060208501945060208101905062000364565b86831015620003ab5784890151620003a7601f8916826200029b565b8355505b6001600288020188555050505b505050505050565b61063a80620003d06000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806306fdde031461005157806361a839af1461006f5780637195e1cd1461009f578063b189fd4c146100cf575b600080fd5b6100596100ff565b60405161006691906102f0565b60405180910390f35b61008960048036038101906100849190610427565b61018d565b6040516100969190610492565b60405180910390f35b6100b960048036038101906100b491906104ad565b6101bf565b6040516100c691906104fc565b60405180910390f35b6100e960048036038101906100e4919061054d565b61020d565b6040516100f69190610589565b60405180910390f35b6000805461010c906105d3565b80601f0160208091040260200160405190810160405280929190818152602001828054610138906105d3565b80156101855780601f1061015a57610100808354040283529160200191610185565b820191906000526020600020905b81548152906001019060200180831161016857829003601f168201915b505050505081565b610195610246565b60008260000151905082602001518360000181815250508083602001818152505082915050919050565b6000818312156101f1577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050610207565b818313156102025760019050610207565b600090505b92915050565b6000600a82019150816040516020016102269190610589565b6040516020818303038152906040528051906020012060001c9050919050565b604051806040016040528060008152602001600081525090565b600081519050919050565b600082825260208201905092915050565b60005b8381101561029a57808201518184015260208101905061027f565b60008484015250505050565b6000601f19601f8301169050919050565b60006102c282610260565b6102cc818561026b565b93506102dc81856020860161027c565b6102e5816102a6565b840191505092915050565b6000602082019050818103600083015261030a81846102b7565b905092915050565b6000604051905090565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61035e826102a6565b810181811067ffffffffffffffff8211171561037d5761037c610326565b5b80604052505050565b6000610390610312565b905061039c8282610355565b919050565b6000819050919050565b6103b4816103a1565b81146103bf57600080fd5b50565b6000813590506103d1816103ab565b92915050565b6000604082840312156103ed576103ec610321565b5b6103f76040610386565b90506000610407848285016103c2565b600083015250602061041b848285016103c2565b60208301525092915050565b60006040828403121561043d5761043c61031c565b5b600061044b848285016103d7565b91505092915050565b61045d816103a1565b82525050565b6040820160008201516104796000850182610454565b50602082015161048c6020850182610454565b50505050565b60006040820190506104a76000830184610463565b92915050565b600080604083850312156104c4576104c361031c565b5b60006104d2858286016103c2565b92505060206104e3858286016103c2565b9150509250929050565b6104f6816103a1565b82525050565b600060208201905061051160008301846104ed565b92915050565b6000819050919050565b61052a81610517565b811461053557600080fd5b50565b60008135905061054781610521565b92915050565b6000602082840312156105635761056261031c565b5b600061057184828501610538565b91505092915050565b61058381610517565b82525050565b600060208201905061059e600083018461057a565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806105eb57607f821691505b6020821081036105fe576105fd6105a4565b5b5091905056fea264697066735822122037ce04dd832f2bce5a06dc9ae9e4713bec456fdb28945d7b800ecd618cd7551e64736f6c63430008110033";

type TestContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestContract__factory extends ContractFactory {
  constructor(...args: TestContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestContract__factory {
    return super.connect(runner) as TestContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestContractInterface {
    return new Interface(_abi) as TestContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TestContract {
    return new Contract(address, _abi, runner) as unknown as TestContract;
  }
}
